1. 简介：
    在Web世界里，只有JavaScript能跨平台、跨浏览器驱动网页，与用户交互。
    JavaScript语言的标准，被称为ECMAScript标准。（European Computer Manufacturers Association）。
    最新版ECMAScript 6标准（简称ES6）已经在2015年6月正式发布了，所以，讲到JavaScript的版本，实际上就是说它实现了ECMAScript标准的哪个版本。

2.快速入门：
    JavaScript代码可以直接嵌在网页的任何地方，不过通常我们都把JavaScript代码放到<head>中：由<script>...</script>包含的代码就是JavaScript代码，它将直接被浏览器执行。
    第二种方法是把JavaScript代码放到一个单独的.js文件，然后在HTML中通过<script src="..."></script>引入这个文件。
     把JavaScript代码放入一个单独的.js文件中更利于维护代码，并且多个页面可以各自引用同一份.js文件。
    在编写JavaScript代码时，经常需要在Console运行测试代码。在Console中输入console.log(a);，回车后显示的值就是变量的内容。如果你对自己还有更高的要求，可以研究开发者工具的“源码(Sources)”，掌握断点、单步执行等高级调试技巧。
  
   2.1 基本语法
    JavaScript的语法和Java语言类似，每个语句以;结束，语句块用{...}   但是，JavaScript并不强制要求在每个语句的结尾加;，浏览器中负责执行JavaScript代码的引擎会自动在每个语句的结尾补上;。让JavaScript引擎自动加分号在某些情况下会改变程序的语义，导致运行结果与期望不一致
    JavaScript严格区分大小写，如果弄错了大小写，程序将报错或者运行不正常。

   2.2 数据类型和变量
    Number：
         JavaScript不区分整数和浮点数，统一用Number表示，以下都是合法的Number类型
	123; // 整数123
	0.456; // 浮点数0.456
	1.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5
	-99; // 负数
	NaN; // NaN表示Not a Number，当无法计算结果时用NaN表示
	Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity
        计算机由于使用二进制，所以，有时候用十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示，例如：0xff00，0xa5b4c3d2
    字符串：
        字符串是以单引号'或双引号"括起来的任意文本，比如'abc'，"xyz"等等。
    布尔值：
        布尔值和布尔代数的表示完全一致，一个布尔值只有true、false两种值，要么是true，要么是false，可以直接用true、false表示布尔值，也可以通过布尔运算计算出来
        &&与运算，||或运算，！非运算。
    比较运算：
        JavaScript允许对任意数据类型做比较。== 和====由于JavaScript这个设计缺陷，不要使用==比较，始终坚持使用===比较。
        第一种是==比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果。
        第二种是===比较，它不会自动转换数据类型，如果数据类型不一致，返回false，如果一致，再比较。
        另一个例外是NaN这个特殊的Number与所有其他值都不相等，包括它自己。 NaN===NaN  //false  唯一能判断NaN的方法是通过isNaN()函数  isNan(NaN)  //true
        最后要注意浮点数的相等比较：1 / 3 === (1 - 2 / 3); // false
        这不是JavaScript的设计缺陷。浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：Math.abs(1 / 3 - (1 - 2 / 3)) < 0.0000001; // true


        






